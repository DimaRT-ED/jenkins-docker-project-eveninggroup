<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <header  style="text-align: center;"> <%- include('header'); %></header>
    <h1 style="text-align: center;"><%= title %></h1>
    <p style="text-align: center;">Welcome to <%= title %></p>
    <div style="display: flex; justify-content: center;">
      <ul id='todo-list' style="list-style: none;max-width: 400px;">
        <% todos.forEach(function(todo){ %>
          <%- include('todoItem', {todo: todo}); %>
        <% }); %>
      </ul>
      <div style="padding-left: 4vw;"> 
        <%- include('todoForm'); %>
      </div>
    </div>
  </body>
  <script>
    const SERVER_URL = 'http://localhost:3044';
    const path = '/home';


    //ADD
    addTodoForm.onsubmit = async function sumbitAddTask(event) {
        event.preventDefault();

        const body = {
            title: addTodoForm.title.value,
            status: addTodoForm.status.checked
        }

        const options = {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(body)
        }

        const task = { status, data } = await (await fetch(`${SERVER_URL}${path}`, options)).json();
        console.log('task.data :',task.data);
        addTaskToTodoList(task.data);

    }

    function getInput(e){
        const inp = document.createElement('input');
        inp.value =  e.target.textContent;
        e.target.replaceWith(inp)
    }


    //UPDATE
    async function updateTodo(e) {
        const myId= e.target.getAttribute('item-id')
        const title = e.target.getAttribute('type') 
        const text = document.getElementById(`txt${myId}`)
   
        if( !text.readOnly){
          console.log('false',text)
          text.readOnly="true"
          text.style.border="none"
        const body = {
            _id: myId,
            title:text.value,
            status:'false'
        }
        const options = {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(body)
        }
        const { status, data, err } = await (await fetch(`${SERVER_URL}${path}`, options)).json();
        console.log(status, data, err);
     //   e.target.parentNode.remove();
        }else{
          console.log('true',text)
          text.readOnly = false;
         console.log('text  :',text)
         text.style.border="groove"
        }
  

        console.log('title on update::: ',title)
        // const options = {
        //     method: 'PUT',
        //     headers: { 'Content-Type': 'application/json' },
        //     body: JSON.stringify(body)
        // }

        // const { status, data, err } = await (await fetch(`${SERVER_URL}${path}`, options)).json();
        // console.log(status, data, err);
        // e.target.parentNode.remove();
    }

    //DELETE
    async function removeTodo(e) {
        const myId= e.target.getAttribute('item-id')
        console.log('myId on delete::: ',myId)
        const body = {
            _id: myId
        }

        const options = {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(body)
        }

        const { status, data, err } = await (await fetch(`${SERVER_URL}${path}`, options)).json();
        console.log('deleted todo back from DB : ',status, data, err);
        e.target.parentNode.remove();
    }


  

    function addTaskToTodoList({ id, title, status }) {

        const ulTodoList = document.getElementById('todo-list');
        const li = document.createElement('li');
        const span = document.createElement('span');
        const inputCB = document.createElement('input');
        const inputBTN = document.createElement('input');
        const updateBTN = document.createElement('input');

        li.style.border = '1px solid';
        li.textContent = `${id} - ${title}`;

        span.style.marginLeft = '30%';
        span.textContent = 'Done'

        inputCB.type = 'checkbox';
        inputCB.checked = status;

        inputBTN.type = 'button';
        inputBTN.value = "Delete";
        inputBTN.setAttribute('item-id', id);
        inputBTN.onclick = removeTodo

        updateBTN.type = 'button';
        updateBTN.value = "Update";
        updateBTN.setAttribute('item-id', id);

        ulTodoList.append(li);
        li.append(span, inputBTN);
        span.append(inputCB);
        li.append(updateBTN);


    }

</script>
</html>
